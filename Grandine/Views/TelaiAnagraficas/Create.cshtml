@model Grandine.Models.TelaiAnagrafica

@{
    ViewBag.Title = "Create";
}
<link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />
<script src="~/Scripts/jquery-3.1.1.min.js"></script>
<script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
<h4>Inserisci nuovo telaio</h4>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.IDCommessa);
<div class="form-horizontal">
    



    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Telaio, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Telaio, new { htmlAttributes = new { @class = "form-control" , @autocomplete = "off" } })
            @Html.ValidationMessageFor(model => model.Telaio, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Modello, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Modello, new { htmlAttributes = new { @class = "form-control" , @autocomplete = "off" } })
            @Html.ValidationMessageFor(model => model.Modello, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.InsertUser, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.InsertUser, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.InsertUser, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.InsertDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.InsertDate, new { @class = "form-control date-picker" })
                @Html.ValidationMessageFor(model => model.InsertDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NomeFile, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NomeFile, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NomeFile, "", new { @class = "text-danger" })
            </div>
        </div>*@

    @*<div class="form-group">
            @Html.LabelFor(model => model.IDCommessa, "IDCommessa", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IDCommessa", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IDCommessa, "", new { @class = "text-danger" })
            </div>
        </div>*@
    @*
        <div class="form-group">
            @Html.LabelFor(model => model.Annotazioni, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Annotazioni, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Annotazioni, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DataIn, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DataIn, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DataIn, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DataOut, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DataOut, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DataOut, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NFattAttiva, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NFattAttiva, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NFattAttiva, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DataFattAtt, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DataFattAtt, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DataFattAtt, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImpFattAtt, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ImpFattAtt, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ImpFattAtt, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.IDCarrozzeria1, "Carrozzeria 1", htmlAttributes: new { @class = "control-label col-md-2" })
       
        <div class="col-md-10">
            @Html.DropDownList("IDCarrozzeria1", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.IDCarrozzeria1, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IDCarrozzeria2, "Carrozzeria 2", htmlAttributes: new { @class = "control-label col-md-2" })
        
        <div class="col-md-10">
            @Html.DropDownList("IDCarrozzeria2", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.IDCarrozzeria2, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IDBisarchistaAndata, "Bisarchista Andata", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("IDBisarchistaAndata", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.IDBisarchistaAndata, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IDBisarchistaRitorno, "Bisarchista Ritorno", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("IDBisarchistaRitorno", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.IDBisarchistaRitorno, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.Label("Tecnico", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
             @Html.DropDownList("IDTecnico", (SelectList)ViewData["Tecnici"], new { @class = "form-control" })
         </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-success" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Torna a lista", "Index", new { IDCommessa = Session["IDCommessa"] }, new { @class = "btn btn-primary" })
    
</div>

<script src="~/Scripts/j"></script>
<script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
<script type="text/javascript">
    $(function () {
        $(".date-picker").datepicker({
            dateFormat: 'dd-M-yy'
        });

    });

</script>